[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "boards-backend"
dynamic = ["version"]
description = "Backend API server for Boards - AI creative toolkit with GraphQL, auth adapters, and generation workers"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [{ name = "Boards Contributors", email = "dev@boards.io" }]
keywords = [
    "ai",
    "creative",
    "toolkit",
    "graphql",
    "fastapi",
    "strawberry",
    "auth",
    "generation",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Framework :: FastAPI",
    "Framework :: AsyncIO",
]
dependencies = [
    "sqlalchemy>=2.0.0",
    "supabase>=2.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "httpx>=0.24.0",
    "python-dotenv>=1.0.0",
    "strawberry-graphql[fastapi]>=0.200.0",
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
    "dramatiq[redis,watch]>=1.15.0",
    "pillow>=10.0.0",
    "numpy>=1.24.0",
    "psycopg2-binary>=2.9.0",
    "structlog>=23.0.0",
    "asyncpg>=0.29.0",
    "alembic>=1.13.2",
    "aiofiles>=23.0.0",
    "pyyaml>=6.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-postgresql>=6.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "pyright>=1.1.0",
    "black>=23.0.0",
    "pre-commit>=3.0.0",
]
providers = [
    "openai>=1.0.0",
    "anthropic>=0.25.0",
    "replicate>=0.25.0",
    "together>=1.0.0",
]
storage-s3 = ["boto3>=1.34.0", "aioboto3>=12.0.0"]
storage-gcs = ["google-cloud-storage>=2.10.0"]

[project.urls]
Homepage = "https://github.com/weirdfingers/boards"
Documentation = "https://docs.boards.io"
Repository = "https://github.com/weirdfingers/boards"
Issues = "https://github.com/weirdfingers/boards/issues"
Changelog = "https://github.com/weirdfingers/boards/blob/main/CHANGELOG.md"

[project.scripts]
boards-server = "boards.cli:main"
boards-worker = "boards.workers.cli:main"
boards-migrate = "boards.database.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"

[tool.setuptools.dynamic]
version = { attr = "boards.__version__" }

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-postgresql>=6.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "pyright>=1.1.0",
    "black>=23.0.0",
    "pre-commit>=3.0.0",
    "build>=1.3.0",
    "twine>=6.1.0",
]
