name: Version Bump and Release

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: "Bump type"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.bump.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Bump backend version
        id: bump
        run: |
          NEW_VERSION=$(python3 scripts/bump_version.py backend ${{ inputs.bump_type }})
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Bump frontend version to match
        run: |
          cd packages/frontend
          jq --arg version "${{ steps.bump.outputs.version }}" '.version = $version' package.json > package.json.tmp
          mv package.json.tmp package.json

      - name: Commit and tag
        run: |
          git add .
          git commit -m "chore: bump to v${{ steps.bump.outputs.version }}"
          git tag "v${{ steps.bump.outputs.version }}"
          git push origin main --tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.bump.outputs.version }}"
          name: "v${{ steps.bump.outputs.version }}"
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

  publish-python:
    needs: bump-and-release
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "v${{ needs.bump-and-release.outputs.version }}"
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Build package
        run: |
          cd packages/backend
          uv build
      - name: Publish to PyPI
        run: |
          cd packages/backend
          uv publish

  publish-npm:
    needs: bump-and-release
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "v${{ needs.bump-and-release.outputs.version }}"
      - uses: pnpm/action-setup@v2
        with:
          version: 9
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"
      - name: Update npm to latest
        run: npm install -g npm@latest
      - name: Verify npm version
        run: |
          echo "npm version: $(npm --version)"
          echo "Required: >= 11.5.1 for OIDC trusted publishing"
      - name: Install dependencies
        run: pnpm install
      - name: Build package
        run: |
          cd packages/frontend
          pnpm build
      - name: Publish to npm
        run: |
          cd packages/frontend
          pnpm publish --access public --no-git-checks
